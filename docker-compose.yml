version: '3.1'

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - '5432'
    networks:
      - backend_network
    volumes:
      - ./build/database/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  backend:
    container_name: backend
    build: 
      context: srcs/backend
      dockerfile: ../../build/backend/Dockerfile
    image: backend
    environment:
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_USER: "${DB_USER}"
      DB_NAME: "${DB_NAME}"
      DB_PORT: "${DB_PORT}"
      DB_HOST: "${DB_HOST}"
    command: npm run start:dev
    ports:
      - '3000:3000'
    networks:
      - backend_network

  frontend:
    container_name: frontend
    build: 
      context: srcs/frontend
      dockerfile: ../../build/frontend/Dockerfile
    image: frontend
    environment:
      API_PORT: "${API_PORT}"
      API_HOST: "${API_HOST}"
    ports:
      - '8080:80'

networks:
  backend_network:
    driver: bridge
